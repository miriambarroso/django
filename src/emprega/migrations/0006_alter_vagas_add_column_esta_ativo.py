# Generated by Django 4.1.4 on 2023-05-17 13:04

from django.db import migrations, models


def check_column_exists(apps, schema_editor):
    MyModel = apps.get_model('emprega', 'vaga')
    db_table = MyModel._meta.db_table
    column_name = 'esta_ativo'

    if schema_editor.connection.vendor == 'postgresql':
        # PostgreSQL specific query to check column existence
        sql = """
        SELECT column_name
        FROM information_schema.columns
        WHERE table_name = 'vaga' AND column_name = 'esta_ativo';
        """
        exists = schema_editor.execute(sql, [db_table, column_name])
    else:
        # For other database backends, you can use a different query or approach
        exists = False

    if exists:
        # Column exists, perform necessary actions
        pass
    else:
        # Column does not exist, perform necessary actions
        pass


class Migration(migrations.Migration):
    dependencies = [
        ('emprega', '0005_alter_cursoespecializacao_options_and_more'),
    ]
    if migrations.RunPython(check_column_exists):
        operations = [
            migrations.AlterField(
                model_name="vaga",
                name="esta_ativo",
                field=models.BooleanField(default=True, verbose_name="Está ativo"),
            )
        ]
    else:
        operations = [
            migrations.AddField(
                model_name="vaga",
                name="esta_ativo",
                field=models.BooleanField(default=True, verbose_name="Está ativo"),
            )
        ]
